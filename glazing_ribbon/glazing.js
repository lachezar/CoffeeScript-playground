// Generated by CoffeeScript 1.3.3
(function() {
  var Particle, _ref, _ref1, _ref2, _ref3, _ref4;

  Particle = (function() {

    function Particle(W, H) {
      var a, b, g, r;
      this.location = {
        x: Math.random() * W,
        y: Math.random() * H
      };
      this.radius = 0;
      this.speed = 3;
      this.angle = Math.random() * 360;
      r = Math.round(Math.random() * 255);
      g = Math.round(Math.random() * 255);
      b = Math.round(Math.random() * 255);
      a = Math.random();
      this.rgba = "rgba(" + r + ", " + g + ", " + b + ", " + a + ")";
    }

    return Particle;

  })();

  window.onload = function() {
    var H, W, canvas, ctx, draw, particles;
    canvas = document.getElementById("canvas");
    ctx = canvas.getContext("2d");
    W = window.innerWidth;
    H = window.innerHeight;
    canvas.width = W;
    canvas.height = H;
    particles = (function() {
      var _i, _results;
      _results = [];
      for (_i = 0; _i <= 25; _i++) {
        _results.push(new Particle(W, H));
      }
      return _results;
    })();
    draw = function() {
      var distance, p, p2, xd, yd, _i, _j, _len, _len1;
      ctx.globalCompositeOperation = "source-over";
      ctx.fillStyle = "rgba(0, 0, 0, 0.02)";
      ctx.fillRect(0, 0, W, H);
      ctx.globalCompositeOperation = "lighter";
      for (_i = 0, _len = particles.length; _i < _len; _i++) {
        p = particles[_i];
        ctx.fillStyle = "white";
        ctx.fillRect(p.location.x, p.location.y, p.radius, p.radius);
        for (_j = 0, _len1 = particles.length; _j < _len1; _j++) {
          p2 = particles[_j];
          yd = p2.location.y - p.location.y;
          xd = p2.location.x - p.location.x;
          distance = Math.sqrt(xd * xd + yd * yd);
          if (distance < 200) {
            ctx.beginPath();
            ctx.lineWidth = 1;
            ctx.moveTo(p.location.x, p.location.y);
            ctx.lineTo(p2.location.x, p2.location.y);
            ctx.strokeStyle = p.rgba;
            ctx.stroke();
          }
        }
        p.location.x = p.location.x + p.speed * Math.cos(p.angle * Math.PI / 180);
        p.location.y = p.location.y + p.speed * Math.sin(p.angle * Math.PI / 180);
        if (p.location.x < 0) {
          p.location.x = W;
        }
        if (p.location.x > W) {
          p.location.x = 0;
        }
        if (p.location.y < 0) {
          p.location.y = H;
        }
        if (p.location.y > H) {
          p.location.y = 0;
        }
      }
      return window.requestAnimFrame(draw);
    };
    return window.requestAnimFrame(draw);
  };

  window.requestAnimFrame = (_ref = (_ref1 = (_ref2 = (_ref3 = (_ref4 = window.requestAnimationFrame) != null ? _ref4 : window.webkitRequestAnimationFrame) != null ? _ref3 : window.mozRequestAnimationFrame) != null ? _ref2 : window.oRequestAnimationFrame) != null ? _ref1 : window.msRequestAnimationFrame) != null ? _ref : function(callback) {
    return window.setTimeout(callback, 1000 / 60);
  };

}).call(this);
